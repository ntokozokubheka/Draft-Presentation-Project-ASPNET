//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Team_42.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobPost", Namespace="http://schemas.datacontract.org/2004/07/Team_42_web_Service")]
    [System.SerializableAttribute()]
    public partial class JobPost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int P_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Deadline {
            get {
                return this.DeadlineField;
            }
            set {
                if ((object.ReferenceEquals(this.DeadlineField, value) != true)) {
                    this.DeadlineField = value;
                    this.RaisePropertyChanged("Deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Experience {
            get {
                return this.ExperienceField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperienceField, value) != true)) {
                    this.ExperienceField = value;
                    this.RaisePropertyChanged("Experience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Date {
            get {
                return this.P_DateField;
            }
            set {
                if ((object.ReferenceEquals(this.P_DateField, value) != true)) {
                    this.P_DateField = value;
                    this.RaisePropertyChanged("P_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Description {
            get {
                return this.P_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.P_DescriptionField, value) != true)) {
                    this.P_DescriptionField = value;
                    this.RaisePropertyChanged("P_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int P_ID {
            get {
                return this.P_IDField;
            }
            set {
                if ((this.P_IDField.Equals(value) != true)) {
                    this.P_IDField = value;
                    this.RaisePropertyChanged("P_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.QualificationField, value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_Id {
            get {
                return this.R_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.R_IdField, value) != true)) {
                    this.R_IdField = value;
                    this.RaisePropertyChanged("R_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SalaryField, value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recruiter", Namespace="http://schemas.datacontract.org/2004/07/Team_42_web_Service")]
    [System.SerializableAttribute()]
    public partial class Recruiter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int R_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string R_PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_DOB {
            get {
                return this.R_DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.R_DOBField, value) != true)) {
                    this.R_DOBField = value;
                    this.RaisePropertyChanged("R_DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_Email {
            get {
                return this.R_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.R_EmailField, value) != true)) {
                    this.R_EmailField = value;
                    this.RaisePropertyChanged("R_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int R_Id {
            get {
                return this.R_IdField;
            }
            set {
                if ((this.R_IdField.Equals(value) != true)) {
                    this.R_IdField = value;
                    this.RaisePropertyChanged("R_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_Name {
            get {
                return this.R_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.R_NameField, value) != true)) {
                    this.R_NameField = value;
                    this.RaisePropertyChanged("R_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R_Password {
            get {
                return this.R_PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.R_PasswordField, value) != true)) {
                    this.R_PasswordField = value;
                    this.RaisePropertyChanged("R_Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterRec", ReplyAction="http://tempuri.org/IService1/RegisterRecResponse")]
        bool RegisterRec(string name, string email, string Dob, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterRec", ReplyAction="http://tempuri.org/IService1/RegisterRecResponse")]
        System.Threading.Tasks.Task<bool> RegisterRecAsync(string name, string email, string Dob, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostJob", ReplyAction="http://tempuri.org/IService1/PostJobResponse")]
        bool PostJob(string description, string date, string R_Id, string company, string Location, string qualification, string salary, string experience, string deadline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostJob", ReplyAction="http://tempuri.org/IService1/PostJobResponse")]
        System.Threading.Tasks.Task<bool> PostJobAsync(string description, string date, string R_Id, string company, string Location, string qualification, string salary, string experience, string deadline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJobs", ReplyAction="http://tempuri.org/IService1/GetJobsResponse")]
        Team_42.ServiceReference1.JobPost[] GetJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJobs", ReplyAction="http://tempuri.org/IService1/GetJobsResponse")]
        System.Threading.Tasks.Task<Team_42.ServiceReference1.JobPost[]> GetJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginRec", ReplyAction="http://tempuri.org/IService1/LoginRecResponse")]
        bool LoginRec(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginRec", ReplyAction="http://tempuri.org/IService1/LoginRecResponse")]
        System.Threading.Tasks.Task<bool> LoginRecAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRec", ReplyAction="http://tempuri.org/IService1/getRecResponse")]
        Team_42.ServiceReference1.Recruiter getRec(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRec", ReplyAction="http://tempuri.org/IService1/getRecResponse")]
        System.Threading.Tasks.Task<Team_42.ServiceReference1.Recruiter> getRecAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Team_42.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Team_42.ServiceReference1.IService1>, Team_42.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterRec(string name, string email, string Dob, string password) {
            return base.Channel.RegisterRec(name, email, Dob, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterRecAsync(string name, string email, string Dob, string password) {
            return base.Channel.RegisterRecAsync(name, email, Dob, password);
        }
        
        public bool PostJob(string description, string date, string R_Id, string company, string Location, string qualification, string salary, string experience, string deadline) {
            return base.Channel.PostJob(description, date, R_Id, company, Location, qualification, salary, experience, deadline);
        }
        
        public System.Threading.Tasks.Task<bool> PostJobAsync(string description, string date, string R_Id, string company, string Location, string qualification, string salary, string experience, string deadline) {
            return base.Channel.PostJobAsync(description, date, R_Id, company, Location, qualification, salary, experience, deadline);
        }
        
        public Team_42.ServiceReference1.JobPost[] GetJobs() {
            return base.Channel.GetJobs();
        }
        
        public System.Threading.Tasks.Task<Team_42.ServiceReference1.JobPost[]> GetJobsAsync() {
            return base.Channel.GetJobsAsync();
        }
        
        public bool LoginRec(string email, string password) {
            return base.Channel.LoginRec(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginRecAsync(string email, string password) {
            return base.Channel.LoginRecAsync(email, password);
        }
        
        public Team_42.ServiceReference1.Recruiter getRec(string email, string password) {
            return base.Channel.getRec(email, password);
        }
        
        public System.Threading.Tasks.Task<Team_42.ServiceReference1.Recruiter> getRecAsync(string email, string password) {
            return base.Channel.getRecAsync(email, password);
        }
    }
}
